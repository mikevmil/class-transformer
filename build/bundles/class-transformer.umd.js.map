{"version":3,"file":"class-transformer.umd.js","sources":["../esm5/enums/transformation-type.enum.js","../esm5/MetadataStorage.js","../esm5/storage.js","../esm5/utils/get-global.util.js","../esm5/TransformOperationExecutor.js","../esm5/ClassTransformer.js","../esm5/decorators/exclude.decorator.js","../esm5/decorators/expose.decorator.js","../esm5/decorators/transform-class-to-class.decorator.js","../esm5/decorators/transform-class-to-plain.decorator.js","../esm5/decorators/transform-plain-to-class.decorator.js","../esm5/decorators/transform.decorator.js","../esm5/decorators/type.decorator.js","../esm5/index.js"],"sourcesContent":["export var TransformationType;\r\n(function (TransformationType) {\r\n    TransformationType[TransformationType[\"PLAIN_TO_CLASS\"] = 0] = \"PLAIN_TO_CLASS\";\r\n    TransformationType[TransformationType[\"CLASS_TO_PLAIN\"] = 1] = \"CLASS_TO_PLAIN\";\r\n    TransformationType[TransformationType[\"CLASS_TO_CLASS\"] = 2] = \"CLASS_TO_CLASS\";\r\n})(TransformationType || (TransformationType = {}));\r\n//# sourceMappingURL=transformation-type.enum.js.map","import { TransformationType } from './enums';\r\n/**\r\n * Storage all library metadata.\r\n */\r\nvar MetadataStorage = /** @class */ (function () {\r\n    function MetadataStorage() {\r\n        // -------------------------------------------------------------------------\r\n        // Properties\r\n        // -------------------------------------------------------------------------\r\n        this._typeMetadatas = new Map();\r\n        this._transformMetadatas = new Map();\r\n        this._exposeMetadatas = new Map();\r\n        this._excludeMetadatas = new Map();\r\n        this._ancestorsMap = new Map();\r\n    }\r\n    // -------------------------------------------------------------------------\r\n    // Adder Methods\r\n    // -------------------------------------------------------------------------\r\n    MetadataStorage.prototype.addTypeMetadata = function (metadata) {\r\n        if (!this._typeMetadatas.has(metadata.target)) {\r\n            this._typeMetadatas.set(metadata.target, new Map());\r\n        }\r\n        this._typeMetadatas.get(metadata.target).set(metadata.propertyName, metadata);\r\n    };\r\n    MetadataStorage.prototype.addTransformMetadata = function (metadata) {\r\n        if (!this._transformMetadatas.has(metadata.target)) {\r\n            this._transformMetadatas.set(metadata.target, new Map());\r\n        }\r\n        if (!this._transformMetadatas.get(metadata.target).has(metadata.propertyName)) {\r\n            this._transformMetadatas.get(metadata.target).set(metadata.propertyName, []);\r\n        }\r\n        this._transformMetadatas.get(metadata.target).get(metadata.propertyName).push(metadata);\r\n    };\r\n    MetadataStorage.prototype.addExposeMetadata = function (metadata) {\r\n        if (!this._exposeMetadatas.has(metadata.target)) {\r\n            this._exposeMetadatas.set(metadata.target, new Map());\r\n        }\r\n        this._exposeMetadatas.get(metadata.target).set(metadata.propertyName, metadata);\r\n    };\r\n    MetadataStorage.prototype.addExcludeMetadata = function (metadata) {\r\n        if (!this._excludeMetadatas.has(metadata.target)) {\r\n            this._excludeMetadatas.set(metadata.target, new Map());\r\n        }\r\n        this._excludeMetadatas.get(metadata.target).set(metadata.propertyName, metadata);\r\n    };\r\n    // -------------------------------------------------------------------------\r\n    // Public Methods\r\n    // -------------------------------------------------------------------------\r\n    MetadataStorage.prototype.findTransformMetadatas = function (target, propertyName, transformationType) {\r\n        return this.findMetadatas(this._transformMetadatas, target, propertyName).filter(function (metadata) {\r\n            if (!metadata.options)\r\n                return true;\r\n            if (metadata.options.toClassOnly === true && metadata.options.toPlainOnly === true)\r\n                return true;\r\n            if (metadata.options.toClassOnly === true) {\r\n                return (transformationType === TransformationType.CLASS_TO_CLASS ||\r\n                    transformationType === TransformationType.PLAIN_TO_CLASS);\r\n            }\r\n            if (metadata.options.toPlainOnly === true) {\r\n                return transformationType === TransformationType.CLASS_TO_PLAIN;\r\n            }\r\n            return true;\r\n        });\r\n    };\r\n    MetadataStorage.prototype.findExcludeMetadata = function (target, propertyName) {\r\n        return this.findMetadata(this._excludeMetadatas, target, propertyName);\r\n    };\r\n    MetadataStorage.prototype.findExposeMetadata = function (target, propertyName) {\r\n        return this.findMetadata(this._exposeMetadatas, target, propertyName);\r\n    };\r\n    MetadataStorage.prototype.findExposeMetadataByCustomName = function (target, name) {\r\n        return this.getExposedMetadatas(target).find(function (metadata) {\r\n            return metadata.options && metadata.options.name === name;\r\n        });\r\n    };\r\n    MetadataStorage.prototype.findTypeMetadata = function (target, propertyName) {\r\n        return this.findMetadata(this._typeMetadatas, target, propertyName);\r\n    };\r\n    MetadataStorage.prototype.getStrategy = function (target) {\r\n        var excludeMap = this._excludeMetadatas.get(target);\r\n        var exclude = excludeMap && excludeMap.get(undefined);\r\n        var exposeMap = this._exposeMetadatas.get(target);\r\n        var expose = exposeMap && exposeMap.get(undefined);\r\n        if ((exclude && expose) || (!exclude && !expose))\r\n            return 'none';\r\n        return exclude ? 'excludeAll' : 'exposeAll';\r\n    };\r\n    MetadataStorage.prototype.getExposedMetadatas = function (target) {\r\n        return this.getMetadata(this._exposeMetadatas, target);\r\n    };\r\n    MetadataStorage.prototype.getExcludedMetadatas = function (target) {\r\n        return this.getMetadata(this._excludeMetadatas, target);\r\n    };\r\n    MetadataStorage.prototype.getExposedProperties = function (target, transformationType) {\r\n        return this.getExposedMetadatas(target)\r\n            .filter(function (metadata) {\r\n            if (!metadata.options)\r\n                return true;\r\n            if (metadata.options.toClassOnly === true && metadata.options.toPlainOnly === true)\r\n                return true;\r\n            if (metadata.options.toClassOnly === true) {\r\n                return (transformationType === TransformationType.CLASS_TO_CLASS ||\r\n                    transformationType === TransformationType.PLAIN_TO_CLASS);\r\n            }\r\n            if (metadata.options.toPlainOnly === true) {\r\n                return transformationType === TransformationType.CLASS_TO_PLAIN;\r\n            }\r\n            return true;\r\n        })\r\n            .map(function (metadata) { return metadata.propertyName; });\r\n    };\r\n    MetadataStorage.prototype.getExcludedProperties = function (target, transformationType) {\r\n        return this.getExcludedMetadatas(target)\r\n            .filter(function (metadata) {\r\n            if (!metadata.options)\r\n                return true;\r\n            if (metadata.options.toClassOnly === true && metadata.options.toPlainOnly === true)\r\n                return true;\r\n            if (metadata.options.toClassOnly === true) {\r\n                return (transformationType === TransformationType.CLASS_TO_CLASS ||\r\n                    transformationType === TransformationType.PLAIN_TO_CLASS);\r\n            }\r\n            if (metadata.options.toPlainOnly === true) {\r\n                return transformationType === TransformationType.CLASS_TO_PLAIN;\r\n            }\r\n            return true;\r\n        })\r\n            .map(function (metadata) { return metadata.propertyName; });\r\n    };\r\n    MetadataStorage.prototype.clear = function () {\r\n        this._typeMetadatas.clear();\r\n        this._exposeMetadatas.clear();\r\n        this._excludeMetadatas.clear();\r\n        this._ancestorsMap.clear();\r\n    };\r\n    // -------------------------------------------------------------------------\r\n    // Private Methods\r\n    // -------------------------------------------------------------------------\r\n    MetadataStorage.prototype.getMetadata = function (metadatas, target) {\r\n        var metadataFromTargetMap = metadatas.get(target);\r\n        var metadataFromTarget;\r\n        if (metadataFromTargetMap) {\r\n            metadataFromTarget = Array.from(metadataFromTargetMap.values()).filter(function (meta) { return meta.propertyName !== undefined; });\r\n        }\r\n        var metadataFromAncestors = [];\r\n        for (var _i = 0, _a = this.getAncestors(target); _i < _a.length; _i++) {\r\n            var ancestor = _a[_i];\r\n            var ancestorMetadataMap = metadatas.get(ancestor);\r\n            if (ancestorMetadataMap) {\r\n                var metadataFromAncestor = Array.from(ancestorMetadataMap.values()).filter(function (meta) { return meta.propertyName !== undefined; });\r\n                metadataFromAncestors.push.apply(metadataFromAncestors, metadataFromAncestor);\r\n            }\r\n        }\r\n        return metadataFromAncestors.concat(metadataFromTarget || []);\r\n    };\r\n    MetadataStorage.prototype.findMetadata = function (metadatas, target, propertyName) {\r\n        var metadataFromTargetMap = metadatas.get(target);\r\n        if (metadataFromTargetMap) {\r\n            var metadataFromTarget = metadataFromTargetMap.get(propertyName);\r\n            if (metadataFromTarget) {\r\n                return metadataFromTarget;\r\n            }\r\n        }\r\n        for (var _i = 0, _a = this.getAncestors(target); _i < _a.length; _i++) {\r\n            var ancestor = _a[_i];\r\n            var ancestorMetadataMap = metadatas.get(ancestor);\r\n            if (ancestorMetadataMap) {\r\n                var ancestorResult = ancestorMetadataMap.get(propertyName);\r\n                if (ancestorResult) {\r\n                    return ancestorResult;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    MetadataStorage.prototype.findMetadatas = function (metadatas, target, propertyName) {\r\n        var metadataFromTargetMap = metadatas.get(target);\r\n        var metadataFromTarget;\r\n        if (metadataFromTargetMap) {\r\n            metadataFromTarget = metadataFromTargetMap.get(propertyName);\r\n        }\r\n        var metadataFromAncestorsTarget = [];\r\n        for (var _i = 0, _a = this.getAncestors(target); _i < _a.length; _i++) {\r\n            var ancestor = _a[_i];\r\n            var ancestorMetadataMap = metadatas.get(ancestor);\r\n            if (ancestorMetadataMap) {\r\n                if (ancestorMetadataMap.has(propertyName)) {\r\n                    metadataFromAncestorsTarget.push.apply(metadataFromAncestorsTarget, ancestorMetadataMap.get(propertyName));\r\n                }\r\n            }\r\n        }\r\n        return metadataFromAncestorsTarget\r\n            .slice()\r\n            .reverse()\r\n            .concat((metadataFromTarget || []).slice().reverse());\r\n    };\r\n    MetadataStorage.prototype.getAncestors = function (target) {\r\n        if (!target)\r\n            return [];\r\n        if (!this._ancestorsMap.has(target)) {\r\n            var ancestors = [];\r\n            for (var baseClass = Object.getPrototypeOf(target.prototype.constructor); typeof baseClass.prototype !== 'undefined'; baseClass = Object.getPrototypeOf(baseClass.prototype.constructor)) {\r\n                ancestors.push(baseClass);\r\n            }\r\n            this._ancestorsMap.set(target, ancestors);\r\n        }\r\n        return this._ancestorsMap.get(target);\r\n    };\r\n    return MetadataStorage;\r\n}());\r\nexport { MetadataStorage };\r\n//# sourceMappingURL=MetadataStorage.js.map","import { MetadataStorage } from './MetadataStorage';\r\n/**\r\n * Default metadata storage is used as singleton and can be used to storage all metadatas.\r\n */\r\nexport var defaultMetadataStorage = new MetadataStorage();\r\n//# sourceMappingURL=storage.js.map","/**\r\n * This function returns the global object across Node and browsers.\r\n *\r\n * Note: `globalThis` is the standardized approach however it has been added to\r\n * Node.js in version 12. We need to include this snippet until Node 12 EOL.\r\n */\r\nexport function getGlobal() {\r\n    if (typeof globalThis !== 'undefined') {\r\n        return globalThis;\r\n    }\r\n    if (typeof global !== 'undefined') {\r\n        return global;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-ignore: Cannot find name 'window'.\r\n    if (typeof window !== 'undefined') {\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-ignore: Cannot find name 'window'.\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-ignore: Cannot find name 'self'.\r\n    if (typeof self !== 'undefined') {\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-ignore: Cannot find name 'self'.\r\n        return self;\r\n    }\r\n}\r\n//# sourceMappingURL=get-global.util.js.map","import { defaultMetadataStorage } from './storage';\r\nimport { TransformationType } from './enums';\r\nimport { getGlobal } from './utils';\r\nfunction instantiateArrayType(arrayType) {\r\n    var array = new arrayType();\r\n    if (!(array instanceof Set) && !('push' in array)) {\r\n        return [];\r\n    }\r\n    return array;\r\n}\r\nvar TransformOperationExecutor = /** @class */ (function () {\r\n    // -------------------------------------------------------------------------\r\n    // Constructor\r\n    // -------------------------------------------------------------------------\r\n    function TransformOperationExecutor(transformationType, options) {\r\n        this.transformationType = transformationType;\r\n        this.options = options;\r\n        // -------------------------------------------------------------------------\r\n        // Private Properties\r\n        // -------------------------------------------------------------------------\r\n        this.recursionStack = new Set();\r\n    }\r\n    // -------------------------------------------------------------------------\r\n    // Public Methods\r\n    // -------------------------------------------------------------------------\r\n    TransformOperationExecutor.prototype.transform = function (source, value, targetType, arrayType, isMap, level) {\r\n        var _this = this;\r\n        if (level === void 0) { level = 0; }\r\n        if (Array.isArray(value) || value instanceof Set) {\r\n            var newValue_1 = arrayType && this.transformationType === TransformationType.PLAIN_TO_CLASS\r\n                ? instantiateArrayType(arrayType)\r\n                : [];\r\n            value.forEach(function (subValue, index) {\r\n                var subSource = source ? source[index] : undefined;\r\n                if (!_this.options.enableCircularCheck || !_this.isCircular(subValue)) {\r\n                    var realTargetType = void 0;\r\n                    if (typeof targetType !== 'function' &&\r\n                        targetType &&\r\n                        targetType.options &&\r\n                        targetType.options.discriminator &&\r\n                        targetType.options.discriminator.property &&\r\n                        targetType.options.discriminator.subTypes) {\r\n                        if (_this.transformationType === TransformationType.PLAIN_TO_CLASS) {\r\n                            realTargetType = targetType.options.discriminator.subTypes.find(function (subType) {\r\n                                return subType.name === subValue[targetType.options.discriminator.property];\r\n                            });\r\n                            var options = { newObject: newValue_1, object: subValue, property: undefined };\r\n                            var newType = targetType.typeFunction(options);\r\n                            realTargetType === undefined ? (realTargetType = newType) : (realTargetType = realTargetType.value);\r\n                            if (!targetType.options.keepDiscriminatorProperty)\r\n                                delete subValue[targetType.options.discriminator.property];\r\n                        }\r\n                        if (_this.transformationType === TransformationType.CLASS_TO_CLASS) {\r\n                            realTargetType = subValue.constructor;\r\n                        }\r\n                        if (_this.transformationType === TransformationType.CLASS_TO_PLAIN) {\r\n                            subValue[targetType.options.discriminator.property] = targetType.options.discriminator.subTypes.find(function (subType) { return subType.value === subValue.constructor; }).name;\r\n                        }\r\n                    }\r\n                    else {\r\n                        realTargetType = targetType;\r\n                    }\r\n                    var value_1 = _this.transform(subSource, subValue, realTargetType, undefined, subValue instanceof Map, level + 1);\r\n                    if (newValue_1 instanceof Set) {\r\n                        newValue_1.add(value_1);\r\n                    }\r\n                    else {\r\n                        newValue_1.push(value_1);\r\n                    }\r\n                }\r\n                else if (_this.transformationType === TransformationType.CLASS_TO_CLASS) {\r\n                    if (newValue_1 instanceof Set) {\r\n                        newValue_1.add(subValue);\r\n                    }\r\n                    else {\r\n                        newValue_1.push(subValue);\r\n                    }\r\n                }\r\n            });\r\n            return newValue_1;\r\n        }\r\n        else if (targetType === String && !isMap) {\r\n            if (value === null || value === undefined)\r\n                return value;\r\n            return String(value);\r\n        }\r\n        else if (targetType === Number && !isMap) {\r\n            if (value === null || value === undefined)\r\n                return value;\r\n            return Number(value);\r\n        }\r\n        else if (targetType === Boolean && !isMap) {\r\n            if (value === null || value === undefined)\r\n                return value;\r\n            return Boolean(value);\r\n        }\r\n        else if ((targetType === Date || value instanceof Date) && !isMap) {\r\n            if (value instanceof Date) {\r\n                return new Date(value.valueOf());\r\n            }\r\n            if (value === null || value === undefined)\r\n                return value;\r\n            return new Date(value);\r\n        }\r\n        else if (!!getGlobal().Buffer && (targetType === Buffer || value instanceof Buffer) && !isMap) {\r\n            if (value === null || value === undefined)\r\n                return value;\r\n            return Buffer.from(value);\r\n        }\r\n        else if (typeof value === 'object' && value !== null) {\r\n            // try to guess the type\r\n            if (!targetType && value.constructor !== Object /* && TransformationType === TransformationType.CLASS_TO_PLAIN*/)\r\n                targetType = value.constructor;\r\n            if (!targetType && source)\r\n                targetType = source.constructor;\r\n            if (this.options.enableCircularCheck) {\r\n                // add transformed type to prevent circular references\r\n                this.recursionStack.add(value);\r\n            }\r\n            var keys = this.getKeys(targetType, value, isMap);\r\n            var newValue = source ? source : {};\r\n            if (!source &&\r\n                (this.transformationType === TransformationType.PLAIN_TO_CLASS ||\r\n                    this.transformationType === TransformationType.CLASS_TO_CLASS)) {\r\n                if (isMap) {\r\n                    newValue = new Map();\r\n                }\r\n                else if (targetType) {\r\n                    newValue = new targetType();\r\n                }\r\n                else {\r\n                    newValue = {};\r\n                }\r\n            }\r\n            var _loop_1 = function (key) {\r\n                if (key === '__proto__' || key === 'constructor') {\r\n                    return \"continue\";\r\n                }\r\n                var valueKey = key;\r\n                var newValueKey = key, propertyName = key;\r\n                if (!this_1.options.ignoreDecorators && targetType) {\r\n                    if (this_1.transformationType === TransformationType.PLAIN_TO_CLASS) {\r\n                        var exposeMetadata = defaultMetadataStorage.findExposeMetadataByCustomName(targetType, key);\r\n                        if (exposeMetadata) {\r\n                            propertyName = exposeMetadata.propertyName;\r\n                            newValueKey = exposeMetadata.propertyName;\r\n                        }\r\n                    }\r\n                    else if (this_1.transformationType === TransformationType.CLASS_TO_PLAIN ||\r\n                        this_1.transformationType === TransformationType.CLASS_TO_CLASS) {\r\n                        var exposeMetadata = defaultMetadataStorage.findExposeMetadata(targetType, key);\r\n                        if (exposeMetadata && exposeMetadata.options && exposeMetadata.options.name) {\r\n                            newValueKey = exposeMetadata.options.name;\r\n                        }\r\n                    }\r\n                }\r\n                // get a subvalue\r\n                var subValue = undefined;\r\n                if (value instanceof Map) {\r\n                    subValue = value.get(valueKey);\r\n                }\r\n                else if (value[valueKey] instanceof Function) {\r\n                    subValue = value[valueKey]();\r\n                }\r\n                else {\r\n                    subValue = value[valueKey];\r\n                }\r\n                // determine a type\r\n                var type = undefined, isSubValueMap = subValue instanceof Map;\r\n                if (targetType && isMap) {\r\n                    type = targetType;\r\n                }\r\n                else if (targetType) {\r\n                    var metadata_1 = defaultMetadataStorage.findTypeMetadata(targetType, propertyName);\r\n                    if (metadata_1) {\r\n                        var options = { newObject: newValue, object: value, property: propertyName };\r\n                        var newType = metadata_1.typeFunction ? metadata_1.typeFunction(options) : metadata_1.reflectedType;\r\n                        if (metadata_1.options &&\r\n                            metadata_1.options.discriminator &&\r\n                            metadata_1.options.discriminator.property &&\r\n                            metadata_1.options.discriminator.subTypes) {\r\n                            if (!(value[valueKey] instanceof Array)) {\r\n                                if (this_1.transformationType === TransformationType.PLAIN_TO_CLASS) {\r\n                                    type = metadata_1.options.discriminator.subTypes.find(function (subType) {\r\n                                        if (subValue && metadata_1.options.discriminator.property in subValue) {\r\n                                            return subType.name === subValue[metadata_1.options.discriminator.property];\r\n                                        }\r\n                                    });\r\n                                    type === undefined ? (type = newType) : (type = type.value);\r\n                                    if (!metadata_1.options.keepDiscriminatorProperty) {\r\n                                        if (subValue && metadata_1.options.discriminator.property in subValue) {\r\n                                            delete subValue[metadata_1.options.discriminator.property];\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (this_1.transformationType === TransformationType.CLASS_TO_CLASS) {\r\n                                    type = subValue.constructor;\r\n                                }\r\n                                if (this_1.transformationType === TransformationType.CLASS_TO_PLAIN) {\r\n                                    subValue[metadata_1.options.discriminator.property] = metadata_1.options.discriminator.subTypes.find(function (subType) { return subType.value === subValue.constructor; }).name;\r\n                                }\r\n                            }\r\n                            else {\r\n                                type = metadata_1;\r\n                            }\r\n                        }\r\n                        else {\r\n                            type = newType;\r\n                        }\r\n                        isSubValueMap = isSubValueMap || metadata_1.reflectedType === Map;\r\n                    }\r\n                    else if (this_1.options.targetMaps) {\r\n                        // try to find a type in target maps\r\n                        this_1.options.targetMaps\r\n                            .filter(function (map) { return map.target === targetType && !!map.properties[propertyName]; })\r\n                            .forEach(function (map) { return (type = map.properties[propertyName]); });\r\n                    }\r\n                    else if (this_1.options.enableImplicitConversion &&\r\n                        this_1.transformationType === TransformationType.PLAIN_TO_CLASS) {\r\n                        // if we have no registererd type via the @Type() decorator then we check if we have any\r\n                        // type declarations in reflect-metadata (type declaration is emited only if some decorator is added to the property.)\r\n                        var reflectedType = Reflect.getMetadata('design:type', targetType.prototype, propertyName);\r\n                        if (reflectedType) {\r\n                            type = reflectedType;\r\n                        }\r\n                    }\r\n                }\r\n                // if value is an array try to get its custom array type\r\n                var arrayType_1 = Array.isArray(value[valueKey])\r\n                    ? this_1.getReflectedType(targetType, propertyName)\r\n                    : undefined;\r\n                // const subValueKey = TransformationType === TransformationType.PLAIN_TO_CLASS && newKeyName ? newKeyName : key;\r\n                var subSource = source ? source[valueKey] : undefined;\r\n                // if its deserialization then type if required\r\n                // if we uncomment this types like string[] will not work\r\n                // if (this.transformationType === TransformationType.PLAIN_TO_CLASS && !type && subValue instanceof Object && !(subValue instanceof Date))\r\n                //     throw new Error(`Cannot determine type for ${(targetType as any).name }.${propertyName}, did you forget to specify a @Type?`);\r\n                // if newValue is a source object that has method that match newKeyName then skip it\r\n                if (newValue.constructor.prototype) {\r\n                    var descriptor = Object.getOwnPropertyDescriptor(newValue.constructor.prototype, newValueKey);\r\n                    if ((this_1.transformationType === TransformationType.PLAIN_TO_CLASS ||\r\n                        this_1.transformationType === TransformationType.CLASS_TO_CLASS) &&\r\n                        // eslint-disable-next-line @typescript-eslint/unbound-method\r\n                        ((descriptor && !descriptor.set) || newValue[newValueKey] instanceof Function))\r\n                        return \"continue\";\r\n                }\r\n                if (!this_1.options.enableCircularCheck || !this_1.isCircular(subValue)) {\r\n                    var transformKey = this_1.transformationType === TransformationType.PLAIN_TO_CLASS ? newValueKey : key;\r\n                    var finalValue = void 0;\r\n                    if (this_1.transformationType === TransformationType.CLASS_TO_PLAIN) {\r\n                        // Get original value\r\n                        finalValue = value[transformKey];\r\n                        // Apply custom transformation\r\n                        finalValue = this_1.applyCustomTransformations(finalValue, targetType, transformKey, value, this_1.transformationType);\r\n                        // If nothing change, it means no custom transformation was applied, so use the subValue.\r\n                        finalValue = value[transformKey] === finalValue ? subValue : finalValue;\r\n                        // Apply the default transformation\r\n                        finalValue = this_1.transform(subSource, finalValue, type, arrayType_1, isSubValueMap, level + 1);\r\n                    }\r\n                    else {\r\n                        if (subValue === undefined && this_1.options.exposeDefaultValues) {\r\n                            // Set default value if nothing provided\r\n                            finalValue = newValue[newValueKey];\r\n                        }\r\n                        else {\r\n                            finalValue = this_1.transform(subSource, subValue, type, arrayType_1, isSubValueMap, level + 1);\r\n                            finalValue = this_1.applyCustomTransformations(finalValue, targetType, transformKey, value, this_1.transformationType);\r\n                        }\r\n                    }\r\n                    if (newValue instanceof Map) {\r\n                        newValue.set(newValueKey, finalValue);\r\n                    }\r\n                    else {\r\n                        newValue[newValueKey] = finalValue;\r\n                    }\r\n                }\r\n                else if (this_1.transformationType === TransformationType.CLASS_TO_CLASS) {\r\n                    var finalValue = subValue;\r\n                    finalValue = this_1.applyCustomTransformations(finalValue, targetType, key, value, this_1.transformationType);\r\n                    if (newValue instanceof Map) {\r\n                        newValue.set(newValueKey, finalValue);\r\n                    }\r\n                    else {\r\n                        newValue[newValueKey] = finalValue;\r\n                    }\r\n                }\r\n            };\r\n            var this_1 = this;\r\n            // traverse over keys\r\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\r\n                var key = keys_1[_i];\r\n                _loop_1(key);\r\n            }\r\n            if (this.options.enableCircularCheck) {\r\n                this.recursionStack.delete(value);\r\n            }\r\n            return newValue;\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    };\r\n    TransformOperationExecutor.prototype.applyCustomTransformations = function (value, target, key, obj, transformationType) {\r\n        var _this = this;\r\n        var metadatas = defaultMetadataStorage.findTransformMetadatas(target, key, this.transformationType);\r\n        // apply versioning options\r\n        if (this.options.version !== undefined) {\r\n            metadatas = metadatas.filter(function (metadata) {\r\n                if (!metadata.options)\r\n                    return true;\r\n                return _this.checkVersion(metadata.options.since, metadata.options.until);\r\n            });\r\n        }\r\n        // apply grouping options\r\n        if (this.options.groups && this.options.groups.length) {\r\n            metadatas = metadatas.filter(function (metadata) {\r\n                if (!metadata.options)\r\n                    return true;\r\n                return _this.checkGroups(metadata.options.groups);\r\n            });\r\n        }\r\n        else {\r\n            metadatas = metadatas.filter(function (metadata) {\r\n                return !metadata.options || !metadata.options.groups || !metadata.options.groups.length;\r\n            });\r\n        }\r\n        metadatas.forEach(function (metadata) {\r\n            value = metadata.transformFn({ value: value, key: key, obj: obj, type: transformationType });\r\n        });\r\n        return value;\r\n    };\r\n    // preventing circular references\r\n    TransformOperationExecutor.prototype.isCircular = function (object) {\r\n        return this.recursionStack.has(object);\r\n    };\r\n    TransformOperationExecutor.prototype.getReflectedType = function (target, propertyName) {\r\n        if (!target)\r\n            return undefined;\r\n        var meta = defaultMetadataStorage.findTypeMetadata(target, propertyName);\r\n        return meta ? meta.reflectedType : undefined;\r\n    };\r\n    TransformOperationExecutor.prototype.getKeys = function (target, object, isMap) {\r\n        var _this = this;\r\n        // determine exclusion strategy\r\n        var strategy = defaultMetadataStorage.getStrategy(target);\r\n        if (strategy === 'none')\r\n            strategy = this.options.strategy || 'exposeAll'; // exposeAll is default strategy\r\n        // get all keys that need to expose\r\n        var keys = [];\r\n        if (strategy === 'exposeAll' || isMap) {\r\n            if (object instanceof Map) {\r\n                keys = Array.from(object.keys());\r\n            }\r\n            else {\r\n                keys = Object.keys(object);\r\n            }\r\n        }\r\n        if (isMap) {\r\n            // expose & exclude do not apply for map keys only to fields\r\n            return keys;\r\n        }\r\n        if (!this.options.ignoreDecorators && target) {\r\n            // add all exposed to list of keys\r\n            var exposedProperties = defaultMetadataStorage.getExposedProperties(target, this.transformationType);\r\n            if (this.transformationType === TransformationType.PLAIN_TO_CLASS) {\r\n                exposedProperties = exposedProperties.map(function (key) {\r\n                    var exposeMetadata = defaultMetadataStorage.findExposeMetadata(target, key);\r\n                    if (exposeMetadata && exposeMetadata.options && exposeMetadata.options.name) {\r\n                        return exposeMetadata.options.name;\r\n                    }\r\n                    return key;\r\n                });\r\n            }\r\n            if (this.options.excludeExtraneousValues) {\r\n                keys = exposedProperties;\r\n            }\r\n            else {\r\n                keys = keys.concat(exposedProperties);\r\n            }\r\n            // exclude excluded properties\r\n            var excludedProperties_1 = defaultMetadataStorage.getExcludedProperties(target, this.transformationType);\r\n            if (excludedProperties_1.length > 0) {\r\n                keys = keys.filter(function (key) {\r\n                    return !excludedProperties_1.includes(key);\r\n                });\r\n            }\r\n            // apply versioning options\r\n            if (this.options.version !== undefined) {\r\n                keys = keys.filter(function (key) {\r\n                    var exposeMetadata = defaultMetadataStorage.findExposeMetadata(target, key);\r\n                    if (!exposeMetadata || !exposeMetadata.options)\r\n                        return true;\r\n                    return _this.checkVersion(exposeMetadata.options.since, exposeMetadata.options.until);\r\n                });\r\n            }\r\n            // apply grouping options\r\n            if (this.options.groups && this.options.groups.length) {\r\n                keys = keys.filter(function (key) {\r\n                    var exposeMetadata = defaultMetadataStorage.findExposeMetadata(target, key);\r\n                    if (!exposeMetadata || !exposeMetadata.options)\r\n                        return true;\r\n                    return _this.checkGroups(exposeMetadata.options.groups);\r\n                });\r\n            }\r\n            else {\r\n                keys = keys.filter(function (key) {\r\n                    var exposeMetadata = defaultMetadataStorage.findExposeMetadata(target, key);\r\n                    return (!exposeMetadata ||\r\n                        !exposeMetadata.options ||\r\n                        !exposeMetadata.options.groups ||\r\n                        !exposeMetadata.options.groups.length);\r\n                });\r\n            }\r\n        }\r\n        // exclude prefixed properties\r\n        if (this.options.excludePrefixes && this.options.excludePrefixes.length) {\r\n            keys = keys.filter(function (key) {\r\n                return _this.options.excludePrefixes.every(function (prefix) {\r\n                    return key.substr(0, prefix.length) !== prefix;\r\n                });\r\n            });\r\n        }\r\n        // make sure we have unique keys\r\n        keys = keys.filter(function (key, index, self) {\r\n            return self.indexOf(key) === index;\r\n        });\r\n        return keys;\r\n    };\r\n    TransformOperationExecutor.prototype.checkVersion = function (since, until) {\r\n        var decision = true;\r\n        if (decision && since)\r\n            decision = this.options.version >= since;\r\n        if (decision && until)\r\n            decision = this.options.version < until;\r\n        return decision;\r\n    };\r\n    TransformOperationExecutor.prototype.checkGroups = function (groups) {\r\n        if (!groups)\r\n            return true;\r\n        return this.options.groups.some(function (optionGroup) { return groups.includes(optionGroup); });\r\n    };\r\n    return TransformOperationExecutor;\r\n}());\r\nexport { TransformOperationExecutor };\r\n//# sourceMappingURL=TransformOperationExecutor.js.map","import { TransformOperationExecutor } from './TransformOperationExecutor';\r\nimport { TransformationType } from './enums';\r\nvar ClassTransformer = /** @class */ (function () {\r\n    function ClassTransformer() {\r\n    }\r\n    ClassTransformer.prototype.classToPlain = function (object, options) {\r\n        var executor = new TransformOperationExecutor(TransformationType.CLASS_TO_PLAIN, options || {});\r\n        return executor.transform(undefined, object, undefined, undefined, undefined, undefined);\r\n    };\r\n    ClassTransformer.prototype.classToPlainFromExist = function (object, plainObject, options) {\r\n        var executor = new TransformOperationExecutor(TransformationType.CLASS_TO_PLAIN, options || {});\r\n        return executor.transform(plainObject, object, undefined, undefined, undefined, undefined);\r\n    };\r\n    ClassTransformer.prototype.plainToClass = function (cls, plain, options) {\r\n        var executor = new TransformOperationExecutor(TransformationType.PLAIN_TO_CLASS, options || {});\r\n        return executor.transform(undefined, plain, cls, undefined, undefined, undefined);\r\n    };\r\n    ClassTransformer.prototype.plainToClassFromExist = function (clsObject, plain, options) {\r\n        var executor = new TransformOperationExecutor(TransformationType.PLAIN_TO_CLASS, options || {});\r\n        return executor.transform(clsObject, plain, undefined, undefined, undefined, undefined);\r\n    };\r\n    ClassTransformer.prototype.classToClass = function (object, options) {\r\n        var executor = new TransformOperationExecutor(TransformationType.CLASS_TO_CLASS, options || {});\r\n        return executor.transform(undefined, object, undefined, undefined, undefined, undefined);\r\n    };\r\n    ClassTransformer.prototype.classToClassFromExist = function (object, fromObject, options) {\r\n        var executor = new TransformOperationExecutor(TransformationType.CLASS_TO_CLASS, options || {});\r\n        return executor.transform(fromObject, object, undefined, undefined, undefined, undefined);\r\n    };\r\n    ClassTransformer.prototype.serialize = function (object, options) {\r\n        return JSON.stringify(this.classToPlain(object, options));\r\n    };\r\n    /**\r\n     * Deserializes given JSON string to a object of the given class.\r\n     */\r\n    ClassTransformer.prototype.deserialize = function (cls, json, options) {\r\n        var jsonObject = JSON.parse(json);\r\n        return this.plainToClass(cls, jsonObject, options);\r\n    };\r\n    /**\r\n     * Deserializes given JSON string to an array of objects of the given class.\r\n     */\r\n    ClassTransformer.prototype.deserializeArray = function (cls, json, options) {\r\n        var jsonObject = JSON.parse(json);\r\n        return this.plainToClass(cls, jsonObject, options);\r\n    };\r\n    return ClassTransformer;\r\n}());\r\nexport { ClassTransformer };\r\n//# sourceMappingURL=ClassTransformer.js.map","import { defaultMetadataStorage } from '../storage';\r\n/**\r\n * Marks the given class or property as excluded. By default the property is excluded in both\r\n * constructorToPlain and plainToConstructor transformations. It can be limited to only one direction\r\n * via using the `toPlainOnly` or `toClassOnly` option.\r\n *\r\n * Can be applied to class definitions and properties.\r\n */\r\nexport function Exclude(options) {\r\n    if (options === void 0) { options = {}; }\r\n    /**\r\n     * NOTE: The `propertyName` property must be marked as optional because\r\n     * this decorator used both as a class and a property decorator and the\r\n     * Typescript compiler will freak out if we make it mandatory as a class\r\n     * decorator only receives one parameter.\r\n     */\r\n    return function (object, propertyName) {\r\n        defaultMetadataStorage.addExcludeMetadata({\r\n            target: object instanceof Function ? object : object.constructor,\r\n            propertyName: propertyName,\r\n            options: options,\r\n        });\r\n    };\r\n}\r\n//# sourceMappingURL=exclude.decorator.js.map","import { defaultMetadataStorage } from '../storage';\r\n/**\r\n * Marks the given class or property as included. By default the property is included in both\r\n * constructorToPlain and plainToConstructor transformations. It can be limited to only one direction\r\n * via using the `toPlainOnly` or `toClassOnly` option.\r\n *\r\n * Can be applied to class definitions and properties.\r\n */\r\nexport function Expose(options) {\r\n    if (options === void 0) { options = {}; }\r\n    /**\r\n     * NOTE: The `propertyName` property must be marked as optional because\r\n     * this decorator used both as a class and a property decorator and the\r\n     * Typescript compiler will freak out if we make it mandatory as a class\r\n     * decorator only receives one parameter.\r\n     */\r\n    return function (object, propertyName) {\r\n        defaultMetadataStorage.addExposeMetadata({\r\n            target: object instanceof Function ? object : object.constructor,\r\n            propertyName: propertyName,\r\n            options: options,\r\n        });\r\n    };\r\n}\r\n//# sourceMappingURL=expose.decorator.js.map","import { ClassTransformer } from '../ClassTransformer';\r\n/**\r\n * Return the class instance only with the exposed properties.\r\n *\r\n * Can be applied to functions and getters/setters only.\r\n */\r\nexport function TransformClassToClass(params) {\r\n    return function (target, propertyKey, descriptor) {\r\n        var classTransformer = new ClassTransformer();\r\n        var originalMethod = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var result = originalMethod.apply(this, args);\r\n            var isPromise = !!result && (typeof result === 'object' || typeof result === 'function') && typeof result.then === 'function';\r\n            return isPromise\r\n                ? result.then(function (data) { return classTransformer.classToClass(data, params); })\r\n                : classTransformer.classToClass(result, params);\r\n        };\r\n    };\r\n}\r\n//# sourceMappingURL=transform-class-to-class.decorator.js.map","import { ClassTransformer } from '../ClassTransformer';\r\n/**\r\n * Transform the object from class to plain object and return only with the exposed properties.\r\n *\r\n * Can be applied to functions and getters/setters only.\r\n */\r\nexport function TransformClassToPlain(params) {\r\n    return function (target, propertyKey, descriptor) {\r\n        var classTransformer = new ClassTransformer();\r\n        var originalMethod = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var result = originalMethod.apply(this, args);\r\n            var isPromise = !!result && (typeof result === 'object' || typeof result === 'function') && typeof result.then === 'function';\r\n            return isPromise\r\n                ? result.then(function (data) { return classTransformer.classToPlain(data, params); })\r\n                : classTransformer.classToPlain(result, params);\r\n        };\r\n    };\r\n}\r\n//# sourceMappingURL=transform-class-to-plain.decorator.js.map","import { ClassTransformer } from '../ClassTransformer';\r\n/**\r\n * Return the class instance only with the exposed properties.\r\n *\r\n * Can be applied to functions and getters/setters only.\r\n */\r\nexport function TransformPlainToClass(classType, params) {\r\n    return function (target, propertyKey, descriptor) {\r\n        var classTransformer = new ClassTransformer();\r\n        var originalMethod = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var result = originalMethod.apply(this, args);\r\n            var isPromise = !!result && (typeof result === 'object' || typeof result === 'function') && typeof result.then === 'function';\r\n            return isPromise\r\n                ? result.then(function (data) { return classTransformer.plainToClass(classType, data, params); })\r\n                : classTransformer.plainToClass(classType, result, params);\r\n        };\r\n    };\r\n}\r\n//# sourceMappingURL=transform-plain-to-class.decorator.js.map","import { defaultMetadataStorage } from '../storage';\r\n/**\r\n * Defines a custom logic for value transformation.\r\n *\r\n * Can be applied to properties only.\r\n */\r\nexport function Transform(transformFn, options) {\r\n    if (options === void 0) { options = {}; }\r\n    return function (target, propertyName) {\r\n        defaultMetadataStorage.addTransformMetadata({\r\n            target: target.constructor,\r\n            propertyName: propertyName,\r\n            transformFn: transformFn,\r\n            options: options,\r\n        });\r\n    };\r\n}\r\n//# sourceMappingURL=transform.decorator.js.map","import { defaultMetadataStorage } from '../storage';\r\n/**\r\n * Specifies a type of the property.\r\n * The given TypeFunction can return a constructor. A discriminator can be given in the options.\r\n *\r\n * Can be applied to properties only.\r\n */\r\nexport function Type(typeFunction, options) {\r\n    if (options === void 0) { options = {}; }\r\n    return function (target, propertyName) {\r\n        var reflectedType = Reflect.getMetadata('design:type', target, propertyName);\r\n        defaultMetadataStorage.addTypeMetadata({\r\n            target: target.constructor,\r\n            propertyName: propertyName,\r\n            reflectedType: reflectedType,\r\n            typeFunction: typeFunction,\r\n            options: options,\r\n        });\r\n    };\r\n}\r\n//# sourceMappingURL=type.decorator.js.map","import { ClassTransformer } from './ClassTransformer';\r\nexport { ClassTransformer } from './ClassTransformer';\r\nexport * from './decorators';\r\nexport * from './interfaces';\r\nexport * from './enums';\r\nvar classTransformer = new ClassTransformer();\r\nexport function classToPlain(object, options) {\r\n    return classTransformer.classToPlain(object, options);\r\n}\r\nexport function classToPlainFromExist(object, plainObject, options) {\r\n    return classTransformer.classToPlainFromExist(object, plainObject, options);\r\n}\r\nexport function plainToClass(cls, plain, options) {\r\n    return classTransformer.plainToClass(cls, plain, options);\r\n}\r\nexport function plainToClassFromExist(clsObject, plain, options) {\r\n    return classTransformer.plainToClassFromExist(clsObject, plain, options);\r\n}\r\nexport function classToClass(object, options) {\r\n    return classTransformer.classToClass(object, options);\r\n}\r\nexport function classToClassFromExist(object, fromObject, options) {\r\n    return classTransformer.classToClassFromExist(object, fromObject, options);\r\n}\r\nexport function serialize(object, options) {\r\n    return classTransformer.serialize(object, options);\r\n}\r\n/**\r\n * Deserializes given JSON string to a object of the given class.\r\n */\r\nexport function deserialize(cls, json, options) {\r\n    return classTransformer.deserialize(cls, json, options);\r\n}\r\n/**\r\n * Deserializes given JSON string to an array of objects of the given class.\r\n */\r\nexport function deserializeArray(cls, json, options) {\r\n    return classTransformer.deserializeArray(cls, json, options);\r\n}\r\n//# sourceMappingURL=index.js.map"],"names":["TransformationType"],"mappings":"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"}